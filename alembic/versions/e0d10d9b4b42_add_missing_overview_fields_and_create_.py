"""Add missing overview fields and create table for decision dates

Revision ID: e0d10d9b4b42
Revises: f291a5fbfaac
Create Date: 2022-05-26 12:42:38.583673

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "e0d10d9b4b42"
down_revision = "f291a5fbfaac"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "power_decision",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("commencement_date", sa.Date(), nullable=True),
        sa.Column("client_approval_date", sa.Date(), nullable=True),
        sa.Column("planning_date", sa.Date(), nullable=True),
        sa.Column("equity_finance_date", sa.Date(), nullable=True),
        sa.Column("debt_finance_date", sa.Date(), nullable=True),
        sa.Column("technical_assistance_date", sa.Date(), nullable=True),
        sa.Column("financial_close_date", sa.Date(), nullable=True),
        sa.Column("construction_start_date", sa.Date(), nullable=True),
        sa.Column("commissioning_date", sa.Date(), nullable=True),
        sa.Column("commercial_operations_date", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("power", sa.Column("other_service_ids", sa.Text(), nullable=True))
    op.add_column("power", sa.Column("statutory_licences", sa.Text(), nullable=True))
    op.add_column("power", sa.Column("statutory_agreements", sa.Text(), nullable=True))
    op.add_column(
        "power",
        sa.Column("power_customer_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.add_column("power", sa.Column("other_customer_ids", sa.Text(), nullable=True))
    op.add_column("power", sa.Column("other_customers", sa.Text(), nullable=True))
    op.add_column(
        "power",
        sa.Column("revenue_source_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.add_column("power", sa.Column("ppa_period", sa.Integer(), nullable=True))
    op.add_column(
        "power", sa.Column("outstanding_activities", sa.Text(), nullable=True)
    )
    op.add_column("power", sa.Column("environmental_impacts", sa.Text(), nullable=True))
    op.add_column("power", sa.Column("related_projects", sa.Text(), nullable=True))
    op.create_foreign_key(
        None,
        "power",
        "power_customer",
        ["power_customer_id"],
        ["id"],
        onupdate="RESTRICT",
        ondelete="RESTRICT",
    )
    op.create_foreign_key(
        None,
        "power",
        "water_service",
        ["revenue_source_id"],
        ["id"],
        onupdate="RESTRICT",
        ondelete="RESTRICT",
    )
    op.drop_column("project_investment", "debt_finance_dates")
    op.drop_column("project_investment", "financial_dates")
    op.drop_column("project_investment", "equity_finance_dates")
    op.drop_column("project_investment", "technical_assistance_dates")
    op.drop_column("project_investment", "planning_dates")
    op.drop_column("project_investment", "commercial_operations_date")
    op.drop_column("project_investment", "construction_start_date")
    op.drop_column("project_investment", "date_financial_close")
    op.drop_column("project_investment", "commissioning_date")
    op.drop_column("project_investment", "client_dates")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "project_investment",
        sa.Column(
            "client_dates",
            postgresql.ARRAY(sa.DATE()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "project_investment",
        sa.Column("commissioning_date", sa.DATE(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "project_investment",
        sa.Column(
            "date_financial_close", sa.DATE(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "project_investment",
        sa.Column(
            "construction_start_date", sa.DATE(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "project_investment",
        sa.Column(
            "commercial_operations_date", sa.DATE(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "project_investment",
        sa.Column(
            "planning_dates",
            postgresql.ARRAY(sa.DATE()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "project_investment",
        sa.Column(
            "technical_assistance_dates",
            postgresql.ARRAY(sa.DATE()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "project_investment",
        sa.Column(
            "equity_finance_dates",
            postgresql.ARRAY(sa.DATE()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "project_investment",
        sa.Column(
            "financial_dates",
            postgresql.ARRAY(sa.DATE()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "project_investment",
        sa.Column(
            "debt_finance_dates",
            postgresql.ARRAY(sa.DATE()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(None, "power", type_="foreignkey")
    op.drop_constraint(None, "power", type_="foreignkey")
    op.drop_column("power", "related_projects")
    op.drop_column("power", "environmental_impacts")
    op.drop_column("power", "outstanding_activities")
    op.drop_column("power", "ppa_period")
    op.drop_column("power", "revenue_source_id")
    op.drop_column("power", "other_customers")
    op.drop_column("power", "other_customer_ids")
    op.drop_column("power", "power_customer_id")
    op.drop_column("power", "statutory_agreements")
    op.drop_column("power", "statutory_licences")
    op.drop_column("power", "other_service_ids")
    op.drop_table("power_decision")
    # ### end Alembic commands ###

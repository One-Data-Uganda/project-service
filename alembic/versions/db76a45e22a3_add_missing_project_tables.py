"""Add missing project tables

Revision ID: db76a45e22a3
Revises: c6f0ff1407e1
Create Date: 2022-05-24 11:17:04.205581

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "db76a45e22a3"
down_revision = "c6f0ff1407e1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "financial_performance",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("main_revenue_sources", sa.Text(), nullable=True),
        sa.Column("other_revenue_sources", sa.Text(), nullable=True),
        sa.Column("ppa_period", sa.Integer(), nullable=True),
        sa.Column("tariff_price", sa.Float(), nullable=True),
        sa.Column("annual_revenue", sa.Float(), nullable=True),
        sa.Column("total_revenue", sa.Float(), nullable=True),
        sa.Column("capital_cost_percentage", sa.Float(), nullable=True),
        sa.Column("payback_period", sa.Integer(), nullable=True),
        sa.Column("npv", sa.Float(), nullable=True),
        sa.Column("average_annual_costs", sa.Float(), nullable=True),
        sa.Column("average_annual_expenses", sa.Float(), nullable=True),
        sa.Column("total_annual_costs", sa.Float(), nullable=True),
        sa.Column("applicable_cost_period", sa.Integer(), nullable=True),
        sa.Column("total_costs_period", sa.Integer(), nullable=True),
        sa.Column("average_annual_revenue", sa.Float(), nullable=True),
        sa.Column("total_net_revenue", sa.Float(), nullable=True),
        sa.Column("key_model_results", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "product_customer",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("name", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "product_service",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("name", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "project_contact",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("project_contact", sa.Text(), nullable=True),
        sa.Column("project_address", sa.Text(), nullable=True),
        sa.Column("project_postal", sa.Text(), nullable=True),
        sa.Column("project_email", sa.Text(), nullable=True),
        sa.Column("project_telephone", sa.Text(), nullable=True),
        sa.Column("project_website", sa.Text(), nullable=True),
        sa.Column("project_nin", sa.Text(), nullable=True),
        sa.Column(
            "project_nin_validate",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=True,
        ),
        sa.Column("general_contact", sa.Text(), nullable=True),
        sa.Column("general_address", sa.Text(), nullable=True),
        sa.Column("general_postal", sa.Text(), nullable=True),
        sa.Column("general_email", sa.Text(), nullable=True),
        sa.Column("general_telephone", sa.Text(), nullable=True),
        sa.Column("general_website", sa.Text(), nullable=True),
        sa.Column("general_nin", sa.Text(), nullable=True),
        sa.Column(
            "general_nin_validate",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "project_legal",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("sponsor_status", sa.Text(), nullable=True),
        sa.Column("permits_status", sa.Text(), nullable=True),
        sa.Column("licenses_status", sa.Text(), nullable=True),
        sa.Column("statutory_status", sa.Text(), nullable=True),
        sa.Column("jv_status", sa.Text(), nullable=True),
        sa.Column("sector_policies", sa.Text(), nullable=True),
        sa.Column("sector_laws", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "risk_management",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.Column("current_partners", sa.Text(), nullable=True),
        sa.Column("prospective_partners", sa.Text(), nullable=True),
        sa.Column("product_types", sa.Text(), nullable=True),
        sa.Column("budget_amount", sa.Float(), nullable=True),
        sa.Column("budget_amount_mobilized", sa.Float(), nullable=True),
        sa.Column("budget_amount_needed", sa.Float(), nullable=True),
        sa.Column("amount", sa.Float(), nullable=True),
        sa.Column("guarantees", sa.Text(), nullable=True),
        sa.Column("guarantee_types", sa.Text(), nullable=True),
        sa.Column("current_guarantee_issuance", sa.Text(), nullable=True),
        sa.Column("prospective_guarantee_issuance", sa.Text(), nullable=True),
        sa.Column("required_guarantee_amount", sa.Float(), nullable=True),
        sa.Column("outstanding_guarantee_amount", sa.Float(), nullable=True),
        sa.Column("guarantees_documentation", sa.Text(), nullable=True),
        sa.Column("government_support", sa.Text(), nullable=True),
        sa.Column("direct_government_support", sa.Text(), nullable=True),
        sa.Column("direct_government_value", sa.Float(), nullable=True),
        sa.Column("indirect_government_support", sa.Text(), nullable=True),
        sa.Column("indirect_government_value", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "power_product",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("product_service_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("other_services", sa.Text(), nullable=True),
        sa.Column("product_unit_id", sa.Text(), nullable=True),
        sa.Column("annual_output", sa.Float(), nullable=True),
        sa.Column("annual_demand", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["product_service_id"],
            ["product_service.id"],
            onupdate="CASCADE",
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "project_investment",
        sa.Column("client_dates", postgresql.ARRAY(sa.Date()), nullable=True),
    )
    op.add_column(
        "project_investment",
        sa.Column("planning_dates", postgresql.ARRAY(sa.Date()), nullable=True),
    )
    op.add_column(
        "project_investment",
        sa.Column("equity_finance_dates", postgresql.ARRAY(sa.Date()), nullable=True),
    )
    op.add_column(
        "project_investment",
        sa.Column("debt_finance_dates", postgresql.ARRAY(sa.Date()), nullable=True),
    )
    op.add_column(
        "project_investment",
        sa.Column(
            "technical_assistance_dates", postgresql.ARRAY(sa.Date()), nullable=True
        ),
    )
    op.add_column(
        "project_investment",
        sa.Column("financial_dates", postgresql.ARRAY(sa.Date()), nullable=True),
    )
    op.add_column(
        "project_investment",
        sa.Column("construction_start_date", sa.Date(), nullable=True),
    )
    op.add_column(
        "project_investment", sa.Column("commissioning_date", sa.Date(), nullable=True)
    )
    op.add_column(
        "project_investment",
        sa.Column("commercial_operations_date", sa.Date(), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("project_investment", "commercial_operations_date")
    op.drop_column("project_investment", "commissioning_date")
    op.drop_column("project_investment", "construction_start_date")
    op.drop_column("project_investment", "financial_dates")
    op.drop_column("project_investment", "technical_assistance_dates")
    op.drop_column("project_investment", "debt_finance_dates")
    op.drop_column("project_investment", "equity_finance_dates")
    op.drop_column("project_investment", "planning_dates")
    op.drop_column("project_investment", "client_dates")
    op.drop_table("power_product")
    op.drop_table("risk_management")
    op.drop_table("project_legal")
    op.drop_table("project_contact")
    op.drop_table("product_service")
    op.drop_table("product_customer")
    op.drop_table("financial_performance")
    # ### end Alembic commands ###

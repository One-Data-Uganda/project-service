"""Initial commit

Revision ID: c354a4ed6c3a
Revises: 
Create Date: 2022-05-17 21:48:16.453435

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c354a4ed6c3a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('capacity',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('development_model',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('development_type',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('energy_resource',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hydropower_type',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('off_taker',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power_component',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('northings', sa.Text(), nullable=True),
    sa.Column('eastings', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power_customer',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power_impact',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description_environment', sa.Text(), nullable=True),
    sa.Column('description_social', sa.Text(), nullable=True),
    sa.Column('description_environment_impact', sa.Text(), nullable=True),
    sa.Column('description_social_impact', sa.Text(), nullable=True),
    sa.Column('treatment_plans', sa.Text(), nullable=True),
    sa.Column('occupational_hazards', sa.Text(), nullable=True),
    sa.Column('local_regulations', sa.Text(), nullable=True),
    sa.Column('sponsor_contribution', sa.Text(), nullable=True),
    sa.Column('key_partners', sa.Text(), nullable=True),
    sa.Column('environmental_concerns', sa.Text(), nullable=True),
    sa.Column('esmp', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power_schedule',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('construction_schedule', sa.Text(), nullable=True),
    sa.Column('startup_schedule', sa.Text(), nullable=True),
    sa.Column('operations_schedule', sa.Text(), nullable=True),
    sa.Column('expenditures', sa.Text(), nullable=True),
    sa.Column('funding_schedule', sa.Text(), nullable=True),
    sa.Column('regulatory_compliance', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ppa_status',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_investment',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('required_investment', sa.Text(), nullable=True),
    sa.Column('shareholder_structure', sa.Text(), nullable=True),
    sa.Column('equity_investors', sa.Text(), nullable=True),
    sa.Column('equity_partners', sa.Text(), nullable=True),
    sa.Column('prospective_equity_amount', sa.Float(), nullable=True),
    sa.Column('required_equity_amount', sa.Float(), nullable=True),
    sa.Column('equity_mobilized', sa.Float(), nullable=True),
    sa.Column('equity_needed', sa.Float(), nullable=True),
    sa.Column('required_debt_amount', sa.Text(), nullable=True),
    sa.Column('current_lenders', sa.Text(), nullable=True),
    sa.Column('prospective_lenders', sa.Text(), nullable=True),
    sa.Column('loan_type', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_market',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('overview', sa.Text(), nullable=True),
    sa.Column('economic_issues', sa.Text(), nullable=True),
    sa.Column('energy_sector', sa.Text(), nullable=True),
    sa.Column('electricity_sector', sa.Text(), nullable=True),
    sa.Column('sector_policies', sa.Text(), nullable=True),
    sa.Column('laws', sa.Text(), nullable=True),
    sa.Column('key_stakeholders', sa.Text(), nullable=True),
    sa.Column('outlook', sa.Text(), nullable=True),
    sa.Column('competition', sa.Text(), nullable=True),
    sa.Column('main_competitors', sa.Text(), nullable=True),
    sa.Column('competitive_advantage', sa.Text(), nullable=True),
    sa.Column('strengths', sa.Text(), nullable=True),
    sa.Column('weaknesses', sa.Text(), nullable=True),
    sa.Column('opportunities', sa.Text(), nullable=True),
    sa.Column('threats', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_team',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('manager', sa.Text(), nullable=True),
    sa.Column('manager_background', sa.Text(), nullable=True),
    sa.Column('has_board', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.Column('number_directors', sa.Integer(), nullable=True),
    sa.Column('board_directors', sa.Text(), nullable=True),
    sa.Column('management_oficers', sa.Text(), nullable=True),
    sa.Column('technical_staff', sa.Text(), nullable=True),
    sa.Column('management_targets', sa.Text(), nullable=True),
    sa.Column('management_agreement', sa.Text(), nullable=True),
    sa.Column('personnel_practices', sa.Text(), nullable=True),
    sa.Column('manager_nin', sa.Text(), nullable=True),
    sa.Column('nin_validate', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ptype',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sponsor',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('other_sponsors', sa.Text(), nullable=True),
    sa.Column('shareholders', sa.Text(), nullable=True),
    sa.Column('background', sa.Text(), nullable=True),
    sa.Column('experience', sa.Text(), nullable=True),
    sa.Column('ownership', sa.Text(), nullable=True),
    sa.Column('percentage_public', sa.Float(), nullable=True),
    sa.Column('percentage_private', sa.Float(), nullable=True),
    sa.Column('percentage_academic', sa.Float(), nullable=True),
    sa.Column('products', sa.Text(), nullable=True),
    sa.Column('other_projects', sa.Text(), nullable=True),
    sa.Column('compliance', sa.Text(), nullable=True),
    sa.Column('partners', sa.Text(), nullable=True),
    sa.Column('capital_statement', sa.Text(), nullable=True),
    sa.Column('contact_person', sa.Text(), nullable=True),
    sa.Column('contact_address', sa.Text(), nullable=True),
    sa.Column('contact_postal', sa.Text(), nullable=True),
    sa.Column('contact_email', sa.Text(), nullable=True),
    sa.Column('contact_telephone', sa.Text(), nullable=True),
    sa.Column('contact_website', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sponsor_type',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('status',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('technology',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('water_service',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('developer', sa.Text(), nullable=True),
    sa.Column('notice', sa.Text(), nullable=True),
    sa.Column('picture_source', sa.Text(), nullable=True),
    sa.Column('sponsor_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('full_name', sa.Text(), nullable=True),
    sa.Column('short_name', sa.Text(), nullable=True),
    sa.Column('capacity_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('size', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('sector_id', sa.Text(), nullable=True),
    sa.Column('energy_resource_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('technology_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('hydropower_type_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('other_technologies', sa.Text(), nullable=True),
    sa.Column('waterbody_names', sa.Text(), nullable=True),
    sa.Column('scheme', sa.Text(), nullable=True),
    sa.Column('design_components', sa.Text(), nullable=True),
    sa.Column('unit_id', sa.Text(), nullable=True),
    sa.Column('average_length', sa.Float(), nullable=True),
    sa.Column('average_width', sa.Float(), nullable=True),
    sa.Column('off_taker_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('statutory_permits', sa.Text(), nullable=True),
    sa.Column('ppa_status_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('ppa_status_grid_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('data_shareable_public', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.Column('data_shareable_local', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.ForeignKeyConstraint(['capacity_id'], ['capacity.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['energy_resource_id'], ['energy_resource.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['hydropower_type_id'], ['hydropower_type.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['off_taker_id'], ['off_taker.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ppa_status_grid_id'], ['ppa_status.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ppa_status_id'], ['ppa_status.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['technology_id'], ['technology.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('size', sa.Float(), nullable=True),
    sa.Column('investment', sa.Float(), nullable=True),
    sa.Column('country_id', sa.Text(), nullable=True),
    sa.Column('sector_id', sa.Text(), nullable=True),
    sa.Column('segment', sa.Text(), nullable=True),
    sa.Column('technology', sa.Text(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('commencement_date', sa.Date(), nullable=True),
    sa.Column('proposed_completion_date', sa.Date(), nullable=True),
    sa.Column('current_stage', sa.Text(), nullable=True),
    sa.Column('next_stages', sa.Text(), nullable=True),
    sa.Column('estimated_cost', sa.Float(), nullable=True),
    sa.Column('contact_information', sa.Text(), nullable=True),
    sa.Column('contact_address', sa.Text(), nullable=True),
    sa.Column('postal_address', sa.Text(), nullable=True),
    sa.Column('telephone', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('website', sa.Text(), nullable=True),
    sa.Column('completed_activities', sa.Text(), nullable=True),
    sa.Column('current_activities', sa.Text(), nullable=True),
    sa.Column('next_activities', sa.Text(), nullable=True),
    sa.Column('outstanding_activities', sa.Text(), nullable=True),
    sa.Column('status_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('sponsor_type_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('reference_code', sa.Text(), nullable=True),
    sa.Column('manager', sa.Text(), nullable=True),
    sa.Column('development_type_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('development_model_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('percentage_public', sa.Float(), nullable=True),
    sa.Column('percentage_private', sa.Float(), nullable=True),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('nearest_town', sa.Text(), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('nearest_capital_country_id', sa.Text(), nullable=True),
    sa.Column('nearest_capital', sa.Text(), nullable=True),
    sa.Column('distance_capital', sa.Float(), nullable=True),
    sa.Column('environmental_impact', sa.Text(), nullable=True),
    sa.Column('social_impact', sa.Text(), nullable=True),
    sa.Column('total_investment', sa.Float(), nullable=True),
    sa.Column('equity_investment', sa.Float(), nullable=True),
    sa.Column('debt_amount', sa.Float(), nullable=True),
    sa.Column('grant_amount', sa.Float(), nullable=True),
    sa.Column('outstanding_investment', sa.Float(), nullable=True),
    sa.Column('related_projects', sa.Text(), nullable=True),
    sa.Column('strategy', sa.Text(), nullable=True),
    sa.Column('alliances', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['development_model_id'], ['development_model.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['development_type_id'], ['development_type.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sponsor_type_id'], ['sponsor_type.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_data',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('height', sa.Text(), nullable=True),
    sa.Column('size_class', sa.Text(), nullable=True),
    sa.Column('hazard_potential', sa.Text(), nullable=True),
    sa.Column('type_of_dam', sa.Text(), nullable=True),
    sa.Column('dam_length', sa.Float(), nullable=True),
    sa.Column('crest_width', sa.Float(), nullable=True),
    sa.Column('catchment_area', sa.Float(), nullable=True),
    sa.Column('design_flow', sa.Float(), nullable=True),
    sa.Column('maximum_flood', sa.Float(), nullable=True),
    sa.Column('q100', sa.Float(), nullable=True),
    sa.Column('q200', sa.Float(), nullable=True),
    sa.Column('canal_length', sa.Float(), nullable=True),
    sa.Column('canal_width', sa.Float(), nullable=True),
    sa.Column('canal_velocity', sa.Float(), nullable=True),
    sa.Column('spillway_type', sa.Text(), nullable=True),
    sa.Column('spillway_length', sa.Float(), nullable=True),
    sa.Column('spillway_free_board', sa.Float(), nullable=True),
    sa.Column('spillway_discharge_capacity', sa.Float(), nullable=True),
    sa.Column('penstocks_type', sa.Text(), nullable=True),
    sa.Column('penstocks_diameter', sa.Float(), nullable=True),
    sa.Column('penstocks_velocity', sa.Float(), nullable=True),
    sa.Column('penstocks_thickness', sa.Float(), nullable=True),
    sa.Column('penstocks_number', sa.Float(), nullable=True),
    sa.Column('installation_method', sa.Text(), nullable=True),
    sa.Column('upstream_control', sa.Text(), nullable=True),
    sa.Column('inlet_control', sa.Text(), nullable=True),
    sa.Column('outlet_control', sa.Text(), nullable=True),
    sa.Column('overhead_crane', sa.Float(), nullable=True),
    sa.Column('turbine_type', sa.Text(), nullable=True),
    sa.Column('turbine_capacity_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('turbine_numbers', sa.Integer(), nullable=True),
    sa.Column('turbine_capacity', sa.Float(), nullable=True),
    sa.Column('turbine_efficiency', sa.Float(), nullable=True),
    sa.Column('turbine_capacity_flow', sa.Float(), nullable=True),
    sa.Column('alternator_power_output', sa.Float(), nullable=True),
    sa.Column('alternator_number', sa.Integer(), nullable=True),
    sa.Column('alternator_voltage', sa.Float(), nullable=True),
    sa.Column('substation_power_output', sa.Float(), nullable=True),
    sa.Column('substation_voltage', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['turbine_capacity_id'], ['capacity.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_sponsor_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sponsor_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('sponsor_type_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['sponsor_id'], ['sponsor.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sponsor_type_id'], ['sponsor_type.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sponsor_country',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sponsor_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('country_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['sponsor_id'], ['sponsor.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sponsor_document',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('sponsor_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('document_type', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['sponsor_id'], ['sponsor.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sponsor_sector_industry',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sponsor_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('sector_industry_id', sa.Text(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.ForeignKeyConstraint(['sponsor_id'], ['sponsor.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power_energy_resource',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('power_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('energy_resource_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_primary', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.ForeignKeyConstraint(['energy_resource_id'], ['energy_resource.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['power_id'], ['power.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power_power_customer',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('power_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('power_customer_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_primary', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.ForeignKeyConstraint(['power_customer_id'], ['power_customer.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['power_id'], ['power.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power_water_service',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('power_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('water_service_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_primary', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.ForeignKeyConstraint(['power_id'], ['power.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['water_service_id'], ['water_service.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_country',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('country_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_document',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('project_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('document_type', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_region',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('region_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('type_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['type_id'], ['ptype.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_type')
    op.drop_table('project_region')
    op.drop_table('project_document')
    op.drop_table('project_country')
    op.drop_table('power_water_service')
    op.drop_table('power_power_customer')
    op.drop_table('power_energy_resource')
    op.drop_table('sponsor_sector_industry')
    op.drop_table('sponsor_document')
    op.drop_table('sponsor_country')
    op.drop_table('project_sponsor_type')
    op.drop_table('project_data')
    op.drop_table('project')
    op.drop_table('power')
    op.drop_table('water_service')
    op.drop_table('unit')
    op.drop_table('technology')
    op.drop_table('status')
    op.drop_table('sponsor_type')
    op.drop_table('sponsor')
    op.drop_table('ptype')
    op.drop_table('project_team')
    op.drop_table('project_market')
    op.drop_table('project_investment')
    op.drop_table('ppa_status')
    op.drop_table('power_schedule')
    op.drop_table('power_impact')
    op.drop_table('power_customer')
    op.drop_table('power_component')
    op.drop_table('off_taker')
    op.drop_table('hydropower_type')
    op.drop_table('energy_resource')
    op.drop_table('development_type')
    op.drop_table('development_model')
    op.drop_table('capacity')
    # ### end Alembic commands ###
